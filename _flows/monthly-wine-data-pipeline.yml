id: monthly-wine-data-pipeline
namespace: bottleneck.reports

tasks:
  - id: convert_excels
    type: io.kestra.plugin.core.flow.WorkingDirectory

    tasks:
      - id: clone_repo
        type: io.kestra.plugin.git.Clone
        url: https://github.com/maevabb/p10_monthly-wine-data-pipeline.git
        branch: main

      - id: run_script
        type: io.kestra.plugin.scripts.python.Commands
        containerImage: ghcr.io/kestra-io/pydata:latest
        beforeCommands:
          - pip install pandas openpyxl
        commands:
          - python scripts/xlsx_to_csv.py
        outputFiles:
          - erp.csv
          - web.csv
          - liaison.csv
      
  - id: clean_missing_erp
    type: io.kestra.plugin.jdbc.duckdb.Query
    url: 'jdbc:duckdb:'
    inputFiles:
      erp.csv: '{{ outputs.run_script["outputFiles"]["erp.csv"] }}'
    fetchType: FETCH
    sql: |
      CREATE OR REPLACE TABLE erp AS
      SELECT *
      FROM read_csv_auto('erp.csv', header=True)
      WHERE product_id IS NOT NULL;
      
      SELECT COUNT(*) AS erp_cleaned_rows FROM erp;

  - id: clean_missing_liaison
    type: io.kestra.plugin.jdbc.duckdb.Query
    url: 'jdbc:duckdb:'
    inputFiles:
      liaison.csv: '{{ outputs.run_script["outputFiles"]["liaison.csv"] }}'
    fetchType: FETCH
    sql: |
      CREATE OR REPLACE TABLE liaison AS
      SELECT *
      FROM read_csv_auto('liaison.csv', header=True)
      WHERE product_id IS NOT NULL;
      
      SELECT COUNT(*) AS liaison_cleaned_rows FROM liaison;

  - id: clean_missing_web
    type: io.kestra.plugin.jdbc.duckdb.Query
    url: 'jdbc:duckdb:'
    inputFiles:
      web.csv: '{{ outputs.run_script["outputFiles"]["web.csv"] }}'
    fetchType: FETCH
    sql: |
      CREATE OR REPLACE TABLE web AS
      SELECT *
      FROM read_csv_auto('web.csv', header=True)
      WHERE sku IS NOT NULL;
      
      SELECT COUNT(*) AS web_cleaned_rows FROM web;
